//  Copyright 2018 Google Inc.
//
//  Permission is hereby granted, free of charge, to any person obtaining a copy
//  of this software and associated documentation files (the "Software"), to deal
//  in the Software without restriction, including without limitation the rights
//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//  copies of the Software, and to permit persons to whom the Software is
//  furnished to do so, subject to the following conditions:/
//
//  The above copyright notice and this permission notice shall be included in
//  all copies or substantial portions of the Software./
//
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
//  THE SOFTWARE.
//

@use "@material/feature-targeting/functions" as feature-targeting-functions;
@use "@material/feature-targeting/mixins" as feature-targeting-mixins;
@use "@material/theme/mixins" as theme-mixins;
@use "@material/typography/mixins" as typography-mixins;
@use "../functions";

// Public mixins

@mixin helper-text-core-styles($query: feature-targeting-functions.all()) {
  $feat-animation: feature-targeting-functions.create-target($query, animation);
  $feat-structure: feature-targeting-functions.create-target($query, structure);

  .mdc-select-helper-text {
    @include typography-mixins.typography(caption, $query: $query);
    @include typography-mixins.text-baseline(16px, $query: $query);

    @include feature-targeting-mixins.targets($feat-structure) {
      margin: 0;
      opacity: 0;
      will-change: opacity;
    }

    @include feature-targeting-mixins.targets($feat-animation) {
      transition: functions.transition(opacity);
    }
  }

  .mdc-select-helper-text--persistent {
    @include feature-targeting-mixins.targets($feat-animation) {
      transition: none;
    }

    @include feature-targeting-mixins.targets($feat-structure) {
      opacity: 1;
      will-change: initial;
    }
  }
}

@mixin helper-text-color($color, $query: feature-targeting-functions.all()) {
  &:not(.mdc-select--disabled) {
    @include helper-text-color_($color, $query: $query);
  }
}

@mixin helper-text-validation-color($color, $query: feature-targeting-functions.all()) {
  &:not(.mdc-select--disabled) {
    @include helper-text-validation-color_($color, $query: $query);
  }
}

// Private mixins

@mixin helper-text-color_($color, $query: feature-targeting-functions.all()) {
  $feat-color: feature-targeting-functions.create-target($query, color);

  .mdc-select__anchor + .mdc-select-helper-text {
    @include feature-targeting-mixins.targets($feat-color) {
      @include theme-mixins.prop(color, $color);
    }
  }
}

@mixin helper-text-validation-color_($color, $query: feature-targeting-functions.all()) {
  $feat-color: feature-targeting-functions.create-target($query, color);

  &.mdc-select--invalid .mdc-select__anchor + .mdc-select-helper-text--validation-msg {
    @include feature-targeting-mixins.targets($feat-color) {
      @include theme-mixins.prop(color, $color);
    }
  }
}
